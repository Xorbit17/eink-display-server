services:
  db:
    image: postgres:16
    restart: always
    container_name: eds_dev_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  app:
    build:
      context: ../..                       # repo root
      dockerfile: tools/development/Dockerfile
    container_name: eds_dev_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      ENV: "development"
      DJANGO_DEBUG: "1"
      APP_RUNTIME: "docker"
      DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
      DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      ADMIN_USERNAME: "${ADMIN_USERNAME:-}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD:-}"
      ADMIN_EMAIL: "${ADMIN_EMAIL:-}"
      OPENAI_API_KEY: "${OPENAI_API_KEY:-}"
      OPENWEATHERMAP_API_KEY: "${OPENWEATHERMAP_API_KEY:-}"
      DISCOVERY_PORT: "${DISCOVERY_PORT:-51234}"
      IN_DOCKER: "1"
      IMAGE_INPUT_DIR: "${IMAGE_INPUT_DIR}"
      GENERATED_OUTPUT_DIR: "${GENERATED_OUTPUT_DIR}"
    volumes:
      - ../..:/app
      - ${IMAGE_INPUT_DIR}:/app/input
      - ${GENERATED_OUTPUT_DIR}:/app/generate 
    ports:
      - "8000:8000"
      - "${DISCOVERY_PORT:-51234}:${DISCOVERY_PORT:-51234}"
    command: ["start.sh"]

